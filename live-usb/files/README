DOMjudge-live image
===================

This DOMjudge-live system contains a ready-to-use copy of the DOMjudge
programming contest jury system. It runs on the Debian GNU/Linux
operating system and the Apache webserver.


Booting the image
-----------------

The image contains a default minimal Debian installation with
recently released DOMjudge Debian packages and dependencies added.
Everything is preconfigured for running a (test) contest.

The boot menu has 4 options: start any combination of domserver and/or
judgehost. These correspond to runlevels (change with 'init <level>'):
2 = plain Debian (no domserver or judgehost)
3 = run domserver only
4 = run judgehost only
5 = run both domserver and judgehost (the default)

A script 'dj-live' is included to perform some basic tasks, such as
changing passwords from the defaults. Run it without arguments on the
console for more information.


Running separate judgehosts
---------------------------

If you want to run additional judgehosts on separate machines, then
the DOMjudge database credentials on the domserver need to be
synchronized to each judgehost. Furthermore, each judgehost must be
assigned a new, unique hostname (which need not necessarily match its
DNS name) and this must be added as a judgehost entry in the jury
web-interface.

The above tasks can be performed by running on the DOMjudge-live
instance used as domserver:

$ dj-live syncjudge <judgehost-address> <judgehost-newhostname>

for each judgehost machine. The first argument must be an IP address
or resolvable DNS name for the system and the hostname of the system
will be set to the second argument, and added as a database entry.

For example, if you have the following:

Machine A: IP = 192.168.1.100, should become server
Machine B: IP = 192.168.1.101, should become judgehost
Machine C: IP = 192.168.1.102, should become judgehost

and all machines still have the default hostname 'domjudge-live' set,
then run the following commands on machine A:

$ dj-live syncjudge 192.168.1.101 judgehost1
$ dj-live syncjudge 192.168.1.102 judgehost2

This will require the root password for machines B and C and
synchronize their judgedaemon mysql configuration in
/etc/domjudge/judgedaemon.dbconfig.php to connect to machine A.
Furthermore, it sets their hostnames to judgehost1 and judgehost2
respectively and adds entries to the judgehosts database table.

Although IP addresses can be used, it will probably be convenient to
setup some DNS configuration for these machines. Then the IP addresses
can be replaced by DNS resolvable hostnames; also the dj-live script
tries to lookup the reverse name for the IP address of the server and
add that as the remote server name in the judgehosts' mysql config.


Accessing the web interfaces
----------------------------

The web interfaces for jury, team, and public can be found under
http://<hostname>/domjudge/{jury,team,public} respectively. See also
http://<hostname>/ for links to these and some basic information,
including usernames and passwords to access the interfaces. Here
<hostname> is the DNS name of the DOMjudge-live system.


Running the image from a harddisk or as virtual machine
-------------------------------------------------------

This image can be written to an USB stick or similar, but it can also
be written to a harddisk or used as virtual machine image, e.g. to use
it as the base of a more permanent DOMjudge instance. In that case you
might want to resize the image beyond its preset size (currently
3.7GB).

When the image is written to a harddisk, it is probably easiest to
boot from a rescue CD and run 'parted' or 'gparted' from it.

Resizing an image file is easiest using the libguestfs tools.
First, create a new image file of the preferred size and format, e.g.
for a raw format:

$ truncate -s 6G <resized.img>

Then run 'virt-resize' from the libguestfs toolset (as root):

$ virt-resize --expand /dev/sda2 <original.img> <resized.img>

This extends the partition that contains the root (ext4) filesystem,
as well as the filesystem itself.

For VirtualBox: running the following command gives you a VDI image
which can be loaded directly by VirtualBox:

$ vboxmanage convertfromraw domjudge-live_YYYY-MM-DD.img \
	domjudge-live_YYYY-MM-DD.vdi


Generating the image from sources
---------------------------------

NOTE: these images are not Debian-live systems in the sense of
http://live.debian.net/ but plain Debian installations that can
be copied onto an USB stick and booted from there. That is, any
changes are persistently stored on the image.

This image can be generated semi-automatically from sources.

First, build a Debian image. Download a Debian netinst CD for
Wheezy/amd64 from http://www.debian.org/CD/netinst/. Make the file
'preseed.cfg' available on a URL that can be accessed in the next
stage.

Create a file (or use a real block device) of at least 4GB to put the
image on. Now boot the netinst CD in a VM like qemu/kvm:

$ kvm -boot d -cdrom <debian-netinst.iso> -hda <domjdge-live-target.img>

hit ESCAPE on the Debian installer boot screen and specify the
following kernel boot options:

  auto url=<webhost>/<path>/preseed.cfg

where the preseed.cfg file is made available at that url. Now a
complete Debian system should automatically be installed onto the
specified image.

After rebooting the image, optionally copy SSH keys for easier access:

$ ssh-copy-id root@<dhcp_hostname>

Note that the root password is set to 'domjudge'.

Next, obtain a copy of the DOMjudge packaging Git repository:

$ git clone https://github.com/DOMjudge/domjudge-packaging.git

and chdir to the 'domjudge-packaging/live-usb' subdirectory.
Then run the domjudge-live specific install script:

$ ./install.sh <dhcp_hostname>

This will generate 'extra-files.tgz' from the subtree 'files',
copy and extract it onto the image and run 'install.sh' there.
When this is finished, you should have a freshly generated
DOMjudge-live image.
